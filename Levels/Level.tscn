[gd_scene load_steps=34 format=2]

[ext_resource path="res://Levels/MainTileMap.tres" type="TileSet" id=1]
[ext_resource path="res://Levels/MapGenerator.gd" type="Script" id=2]
[ext_resource path="res://Levels/FogOfWar.gd" type="Script" id=3]
[ext_resource path="res://res/machine_parts.png" type="Texture" id=4]
[ext_resource path="res://Levels/Level.gd" type="Script" id=5]
[ext_resource path="res://Levels/BuildingRenderer.gd" type="Script" id=6]
[ext_resource path="res://Pathfinding.gd" type="Script" id=7]
[ext_resource path="res://Entities/Player.tscn" type="PackedScene" id=8]
[ext_resource path="res://Controllers/PlayerInputController.gd" type="Script" id=9]
[ext_resource path="res://Gui/NodeEditor/NodeEditor.tscn" type="PackedScene" id=10]
[ext_resource path="res://Levels/TilemapModulator.gd" type="Script" id=11]
[ext_resource path="res://Levels/EntitySpawner.gd" type="Script" id=12]
[ext_resource path="res://Gui/GUI.tscn" type="PackedScene" id=13]
[ext_resource path="res://res/floor_cursor.png" type="Texture" id=14]
[ext_resource path="res://Gui/ActionsPanel/ActionsPanel.tscn" type="PackedScene" id=15]
[ext_resource path="res://Levels/MachineOutlineRenderer.gd" type="Script" id=16]
[ext_resource path="res://Levels/FloorGizmoShader.shader" type="Shader" id=17]
[ext_resource path="res://Levels/Gizmo.gd" type="Script" id=18]
[ext_resource path="res://Gui/ControlsTips/ControlsTips.tscn" type="PackedScene" id=19]
[ext_resource path="res://Controllers/CopperValueController.gd" type="Script" id=20]
[ext_resource path="res://Core/Camera.tscn" type="PackedScene" id=21]
[ext_resource path="res://Levels/PlayerRangeRenderer.gd" type="Script" id=22]
[ext_resource path="res://Controllers/ObjectHoverController.gd" type="Script" id=23]
[ext_resource path="res://Levels/PlayerRangeController.gd" type="Script" id=24]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform vec2 cameraPos = vec2(0.0);

bool isColorInRange(vec4 pixel, vec3 color, float dev) {
	vec3 range = abs(pixel.rgb - color);
	return range.r < dev && range.g < dev && range.b < dev;
}

void fragment() {

	vec4 tex = textureLod(TEXTURE, UV, 1.0);

	float dev = 0.17; // 18 

	vec3 color1 = vec3(0.87, 0.6, 0.49);
	vec3 color2 = vec3(0.55, 0.26, 0.14);

	if (isColorInRange(tex, color1, dev) || isColorInRange(tex, color2, dev)) {
//		c = vec4(0.0, 0.0, 0.0, 1.0);

		float m = (TIME * 2.8 + (UV.x + UV.y) * 20.0 + (cos(SCREEN_UV.x + cameraPos.x) + sin(SCREEN_UV.y - cameraPos.y)) * 40.4);
		m = (sin(m) + 1.0) * 0.5;
		m = m * 0.6 + 3.6;

		vec4 c = pow(m, 2.4) * tex * 0.04;
//		c.b *= 0.7;
		c.r *= 1.2;
		COLOR = c;
	}
	else {
		COLOR = tex;
	}


}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/cameraPos = Vector2( 0, 0 )

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

void fragment() {

//	vec4 stex = textureLod(SCREEN_TEXTURE, SCREEN_UV, 1.0);
//	vec4 tex = textureLod(SCREEN_TEXTURE, SCREEN_UV, 1.0);
	
	vec4 tex = vec4(1.0, 0.5, 0.0, 1.0);
	
	float m = ((sin(TIME * 2.4) + 1.0) * 0.5) * 0.15 + 0.15;
	
	vec4 c = tex;// * 0.5 * abs(sin(TIME * 3.0));
	
//	vec4 c = (stex + tex) * 0.5; //* (m * sin(TIME));
	c.b = pow(tex.b + m, 2.5) * 1.3 * 0.5;
	c.g = pow(tex.g + m, 1.6) * 1.7 * 0.5;
	c.r = pow(tex.r + m, 0.7) * 1.9 * 0.5;
	c.a = pow(c.a + 1.0, 9.7) * 0.002;
	
//	c.r = SCREEN_UV.x;
//	c.g = SCREEN_UV.y;
//	c.b = 0.0;
//	c.a = 1.0;
//	c.a = (c.r + c.g + c.b) * 0.3333 * 0.5;
	
	
	COLOR = c;
//	
	
//	vec4 stex = textureLod(SCREEN_TEXTURE, SCREEN_UV, 1.0);
//	vec4 stex2 = textureLod(SCREEN_TEXTURE, SCREEN_UV + vec2(0.8, 0.8), 1.0);
//	vec4 stex3 = textureLod(SCREEN_TEXTURE, SCREEN_UV + vec2(-0.8, 0.8), 1.0);
//	vec4 stex4 = textureLod(SCREEN_TEXTURE, SCREEN_UV + vec2(0.8, -0.8), 1.0);
//	vec4 stex5 = textureLod(SCREEN_TEXTURE, SCREEN_UV + vec2(-0.8, -0.8), 1.0);
//	vec4 tex = textureLod(TEXTURE, UV, 1.0);
//
//	float m1 = ((sin(TIME * 3.0 + (UV.x + UV.y) * 4.0) + 1.0) * 0.5) * 1.0;
//	float m2 = ((cos(TIME * 3.0 - (UV.x + UV.y) * 4.0) + 1.0) * 0.5) * 1.0;
//
//	vec4 c = (stex2 + stex3 + stex3 + stex4) * 0.25 + stex * (m1 + m2);
	
//	c.g += c.g * (pow(tex.r, 4.0) * tex.a * pow((m1), 2.2)) * 0.8;
//	c.b -= c.b * (pow(tex.r, 4.0) * tex.a * pow((m2), 2.2)) * 0.8;
//	c.r += c.r * (pow(tex.r, 4.0) * tex.a * pow((m2 + m1), 2.2)) * 0.8;
	
	COLOR = c;
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )

[sub_resource type="ShaderMaterial" id=5]
shader = ExtResource( 17 )

[sub_resource type="Shader" id=6]
code = "shader_type canvas_item;

void fragment() {

	vec4 stex = textureLod(SCREEN_TEXTURE, SCREEN_UV, 3.0);
	vec4 tex = textureLod(TEXTURE, UV, 3.0);
	
	vec4 mtex = (stex * tex);

	float m = ((sin(TIME * 2.4 + ((SCREEN_UV.x + SCREEN_UV.y) * 5.8)) + 1.0) * 0.5) * 0.1 + 0.1;
	
	vec4 c = mtex;
	c.r = pow(mtex.r + m, 2.5) * 3.5;
	c.g = pow(mtex.g + m, 1.6) * 3.5;
	c.b = pow(mtex.b + m, 0.7) * 3.5;
	c.a = (c.r + c.g + c.b) * 0.3333 * 0.5;
	
	
	COLOR = c;
//	
	
//	vec4 stex = textureLod(SCREEN_TEXTURE, SCREEN_UV, 1.0);
//	vec4 stex2 = textureLod(SCREEN_TEXTURE, SCREEN_UV + vec2(0.8, 0.8), 1.0);
//	vec4 stex3 = textureLod(SCREEN_TEXTURE, SCREEN_UV + vec2(-0.8, 0.8), 1.0);
//	vec4 stex4 = textureLod(SCREEN_TEXTURE, SCREEN_UV + vec2(0.8, -0.8), 1.0);
//	vec4 stex5 = textureLod(SCREEN_TEXTURE, SCREEN_UV + vec2(-0.8, -0.8), 1.0);
//	vec4 tex = textureLod(TEXTURE, UV, 1.0);
//
//	float m1 = ((sin(TIME * 3.0 + (UV.x + UV.y) * 4.0) + 1.0) * 0.5) * 1.0;
//	float m2 = ((cos(TIME * 3.0 - (UV.x + UV.y) * 4.0) + 1.0) * 0.5) * 1.0;
//
//	vec4 c = (stex2 + stex3 + stex3 + stex4) * 0.25 + stex * (m1 + m2);
	
//	c.g += c.g * (pow(tex.r, 4.0) * tex.a * pow((m1), 2.2)) * 0.8;
//	c.b -= c.b * (pow(tex.r, 4.0) * tex.a * pow((m2), 2.2)) * 0.8;
//	c.r += c.r * (pow(tex.r, 4.0) * tex.a * pow((m2 + m1), 2.2)) * 0.8;
	
	COLOR = c;
}"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;

void fragment() {

	vec4 stex = textureLod(SCREEN_TEXTURE, SCREEN_UV, 3.0);
	vec4 tex = textureLod(TEXTURE, UV, 3.0);
	
	vec4 mtex = (stex * tex);

	float m = ((sin(TIME * 2.4 + ((SCREEN_UV.x + SCREEN_UV.y) * 5.8)) + 1.0) * 0.5) * 0.1 + 0.1;
	
	vec4 c = mtex;
	c.r = pow(mtex.r + m, 2.5) * 3.5;
	c.g = pow(mtex.g + m, 1.6) * 3.5;
	c.b = pow(mtex.b + m, 0.7) * 3.5;
	c.a = (c.r + c.g + c.b) * 0.3333 * 0.5;
	
	
	COLOR = c;
//	
	
//	vec4 stex = textureLod(SCREEN_TEXTURE, SCREEN_UV, 1.0);
//	vec4 stex2 = textureLod(SCREEN_TEXTURE, SCREEN_UV + vec2(0.8, 0.8), 1.0);
//	vec4 stex3 = textureLod(SCREEN_TEXTURE, SCREEN_UV + vec2(-0.8, 0.8), 1.0);
//	vec4 stex4 = textureLod(SCREEN_TEXTURE, SCREEN_UV + vec2(0.8, -0.8), 1.0);
//	vec4 stex5 = textureLod(SCREEN_TEXTURE, SCREEN_UV + vec2(-0.8, -0.8), 1.0);
//	vec4 tex = textureLod(TEXTURE, UV, 1.0);
//
//	float m1 = ((sin(TIME * 3.0 + (UV.x + UV.y) * 4.0) + 1.0) * 0.5) * 1.0;
//	float m2 = ((cos(TIME * 3.0 - (UV.x + UV.y) * 4.0) + 1.0) * 0.5) * 1.0;
//
//	vec4 c = (stex2 + stex3 + stex3 + stex4) * 0.25 + stex * (m1 + m2);
	
//	c.g += c.g * (pow(tex.r, 4.0) * tex.a * pow((m1), 2.2)) * 0.8;
//	c.b -= c.b * (pow(tex.r, 4.0) * tex.a * pow((m2), 2.2)) * 0.8;
//	c.r += c.r * (pow(tex.r, 4.0) * tex.a * pow((m2 + m1), 2.2)) * 0.8;
	
	COLOR = c;
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )

[node name="Level" type="Node2D"]
script = ExtResource( 5 )

[node name="Camera" parent="." instance=ExtResource( 21 )]

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="GUI" parent="CanvasLayer" instance=ExtResource( 13 )]
margin_left = 0.0
margin_right = 0.0

[node name="NodeEditor" parent="CanvasLayer" instance=ExtResource( 10 )]

[node name="ControlsTips" parent="CanvasLayer" instance=ExtResource( 19 )]
margin_left = 11.0
margin_top = 11.0

[node name="ActionsPanel" parent="CanvasLayer" instance=ExtResource( 15 )]
margin_left = 704.0
margin_top = 96.0
margin_right = 704.0
margin_bottom = 96.0
rect_scale = Vector2( 1, 1 )

[node name="TileMap" type="TileMap" parent="."]
material = SubResource( 2 )
scale = Vector2( 0.125, 0.125 )
z_index = -2
z_as_relative = false
tile_set = ExtResource( 1 )
cell_size = Vector2( 256, 256 )
cell_quadrant_size = 32
cell_custom_transform = Transform2D( 32, 0, 0, 32, 0, 0 )
format = 1
tile_data = PoolIntArray( 65541, 10, 0, 65542, 10, 0, 65543, 10, 0, 65544, 10, 0, 65545, 10, 0, 131077, 12, 0, 131078, 8, 0, 131079, 8, 0, 131080, 8, 0, 131081, 8, 0, 196612, 14, 0, 196613, 14, 0, 196614, 11, 0, 196615, 11, 0, 196616, 8, 0, 196617, 8, 0, 262149, 14, 0, 262150, 14, 0, 262151, 14, 0, 262152, 12, 0, 327687, 14, 0, 327688, 14, 0, 393224, 17, 0, 458765, 15, 0 )

[node name="MapGenerator" type="Node" parent="TileMap"]
script = ExtResource( 2 )

[node name="FogOfWar" type="Node" parent="TileMap"]
script = ExtResource( 3 )

[node name="Pathfinding" type="Node2D" parent="TileMap"]
scale = Vector2( 0.125, 0.125 )
script = ExtResource( 7 )

[node name="EntitySpawner" type="Node" parent="TileMap"]
script = ExtResource( 12 )

[node name="TilemapModulator" type="Node" parent="TileMap"]
script = ExtResource( 11 )

[node name="Tween" type="Tween" parent="TileMap/TilemapModulator"]

[node name="Entities" type="Node2D" parent="."]

[node name="Machines" type="Node2D" parent="."]

[node name="DestroyedObjects" type="Node2D" parent="."]

[node name="Player" parent="." instance=ExtResource( 8 )]
position = Vector2( 64, 64 )

[node name="Controllers" type="Node2D" parent="."]

[node name="PlayerInputController" type="Node2D" parent="Controllers"]
script = ExtResource( 9 )

[node name="CopperValueController" type="Node" parent="Controllers"]
script = ExtResource( 20 )

[node name="ObjectHoverController" type="Node2D" parent="Controllers"]
script = ExtResource( 23 )

[node name="PlayerRangeController" type="Node" parent="Controllers"]
script = ExtResource( 24 )

[node name="Renderers" type="Node2D" parent="."]

[node name="BuildingRenderer" type="Node2D" parent="Renderers"]
material = SubResource( 4 )
z_index = -1
z_as_relative = false
script = ExtResource( 6 )

[node name="Gizmo" type="Node2D" parent="Renderers"]
script = ExtResource( 18 )

[node name="Gizmo" type="Sprite" parent="Renderers/Gizmo"]
scale = Vector2( 0.125, 0.125 )
texture = ExtResource( 4 )
hframes = 7
vframes = 7

[node name="FloorGizmo" type="Sprite" parent="Renderers/Gizmo"]
material = SubResource( 5 )
scale = Vector2( 0.12, 0.12 )
z_index = -2
z_as_relative = false
texture = ExtResource( 14 )

[node name="Tween" type="Tween" parent="Renderers/Gizmo"]

[node name="BackBufferCopy" type="BackBufferCopy" parent="Renderers"]
copy_mode = 2
rect = Rect2( 0, 0, 0, 0 )

[node name="MachineOutlineRenderer" type="Node2D" parent="Renderers/BackBufferCopy"]
modulate = Color( 1, 1, 1, 0.576471 )
material = SubResource( 7 )
script = ExtResource( 16 )

[node name="PlayerRangeRenderer" type="Node2D" parent="Renderers/BackBufferCopy"]
modulate = Color( 1, 1, 1, 0.27451 )
material = SubResource( 9 )
script = ExtResource( 22 )
