[gd_scene load_steps=10 format=2]

[ext_resource path="res://Machine/MachineProcessor.gd" type="Script" id=1]
[ext_resource path="res://Machine/Machine.gd" type="Script" id=2]
[ext_resource path="res://Machine/MachineMovement.gd" type="Script" id=3]
[ext_resource path="res://Machine/Modules/DPadModule.tscn" type="PackedScene" id=4]
[ext_resource path="res://res/machine_parts.png" type="Texture" id=5]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

void fragment() {
	
	vec4 color = textureLod(TEXTURE, UV, 1.0);
	
	COLOR.r = 1.0;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;
render_mode unshaded;
 
uniform float width : hint_range(0.0, 16.0);
uniform vec4 outline_color : hint_color;
 
void fragment()
{
    vec2 size = vec2(width) / vec2(textureSize(TEXTURE, 0));
   
    vec4 sprite_color = texture(TEXTURE, UV);
   
    float alpha = sprite_color.a;
    alpha += texture(TEXTURE, UV + vec2(0.0, -size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(size.x, -size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(size.x, 0.0)).a;
    alpha += texture(TEXTURE, UV + vec2(size.x, size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(0.0, size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(-size.x, size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(-size.x, 0.0)).a;
    alpha += texture(TEXTURE, UV + vec2(-size.x, -size.y)).a;
   
	if (sprite_color.a == 0.0 && alpha > 0.0) {
		COLOR = outline_color;
	}
	else if (sprite_color.a > 0.0) {
		COLOR = sprite_color;
	}
	else {
		COLOR = vec4(.0, .0, .0, .0);
	}

//	if (alpha >= 2.0) COLOR = sprite_color;
//	else if (alpha > 0.0) COLOR = vec4(.0, 1.0, .0, 1.0);
//	else COLOR = vec4(.1, .0, .0, 1.0);

//    vec3 final_color = mix(outline_color.rgb, sprite_color.rgb, sprite_color.a);
//	vec4 fc = vec4(final_color, clamp(alpha, 0.0, 1.0));
//    COLOR = fc * 0.5;
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/width = 0.0
shader_param/outline_color = Color( 1, 1, 1, 1 )

[node name="Machine" type="Node2D"]
material = SubResource( 2 )
script = ExtResource( 2 )

[node name="Movement" type="Node2D" parent="."]
script = ExtResource( 3 )

[node name="Tween" type="Tween" parent="Movement"]

[node name="Processor" type="Node2D" parent="."]
script = ExtResource( 1 )

[node name="VC" type="ViewportContainer" parent="."]
material = SubResource( 4 )
margin_right = 200.0
margin_bottom = 200.0
mouse_filter = 2
stretch = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Viewport" type="Viewport" parent="VC"]
size = Vector2( 200, 200 )
size_override_stretch = true
transparent_bg = true
handle_input_locally = false
disable_3d = true
usage = 0
render_target_update_mode = 3

[node name="Modules" type="Node2D" parent="VC/Viewport"]

[node name="DPadModule" parent="VC/Viewport/Modules" instance=ExtResource( 4 )]

[node name="DPadModule2" parent="VC/Viewport/Modules" instance=ExtResource( 4 )]
position = Vector2( 32, 0 )

[node name="DPadModule3" parent="VC/Viewport/Modules" instance=ExtResource( 4 )]
position = Vector2( 32, 32 )

[node name="CoreBorder" type="Sprite" parent="."]
modulate = Color( 0.101961, 0.364706, 0.913725, 0.635294 )
scale = Vector2( 0.68, 0.68 )
texture = ExtResource( 5 )
centered = false
hframes = 7
vframes = 8
frame = 39

[node name="HealthControllers" type="Node2D" parent="."]
